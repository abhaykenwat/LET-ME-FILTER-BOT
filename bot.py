import logging
import logging.config
import asyncio
import os
import requests   # ‚úÖ Self-ping ‡§ï‡•á ‡§≤‡§ø‡§è requests ‡§ö‡§æ‡§π‡§ø‡§è
from pyrogram import Client, __version__
from pyrogram.raw.all import layer
from database.ia_filterdb import Media
from database.users_chats_db import db
from info import *
from utils import temp
from typing import Union, Optional, AsyncGenerator
from pyrogram import types
from aiohttp import web
from plugins import web_server
from pyrogram import idle
from lazybot import LazyPrincessBot
from lazybot.clients import initialize_clients

# -------------------- Existing Configurations --------------------
PORT = "8080"
LazyPrincessBot.start()
loop = asyncio.get_event_loop()

# ‚úÖ SELF-PING URL (‡§Ö‡§ó‡§∞ future ‡§Æ‡•á‡§Ç ‡§®‡§Ø‡§æ deploy ‡§ï‡§∞‡•ã ‡§§‡•ã ‡§Ø‡§π‡§æ‡§Å URL update ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§ó‡§æ)
KOYEB_APP_URL = "https://advisory-kristin-akenwat212-5bf25557.koyeb.app/"

# ‚úÖ Self-ping function (‡§π‡§∞ 10 ‡§Æ‡§ø‡§®‡§ü ‡§Æ‡•á‡§Ç ‡§ñ‡•Å‡§¶ ‡§ï‡•ã ping ‡§ï‡§∞‡•á‡§ó‡§æ ‡§§‡§æ‡§ï‡§ø idle timeout ‡§® ‡§Ü‡§è)
async def self_ping():
    while True:
        try:
            logging.info(f"üîÑ Self-ping ‚Üí {KOYEB_APP_URL}")
            requests.get(KOYEB_APP_URL)
        except Exception as e:
            logging.warning(f"‚ö†Ô∏è Ping failed: {e}")
        await asyncio.sleep(600)  # ‡§π‡§∞ 10 ‡§Æ‡§ø‡§®‡§ü = 600 ‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ping

async def Lazy_start():
    print('\n')
    print(' Initalizing Telegram Bot ')
    
    # ‚úÖ Existing folder check
    if not os.path.isdir(DOWNLOAD_LOCATION):
        os.makedirs(DOWNLOAD_LOCATION)
    
    bot_info = await LazyPrincessBot.get_me()
    LazyPrincessBot.username = bot_info.username
    
    # ‚úÖ Initialize extra clients
    await initialize_clients()
    
    # ‚úÖ Self-ping ‡§ï‡•ã ‡§π‡§Æ‡•á‡§∂‡§æ enable ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ (Heroku ‡§π‡•ã ‡§Ø‡§æ Koyeb, ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§ó‡§æ)
    asyncio.create_task(self_ping())
    
    # ‚úÖ Existing banned users & chats load
    b_users, b_chats , lz_verified = await db.get_banned()
    temp.BANNED_USERS = b_users
    temp.BANNED_CHATS = b_chats
    temp.LAZY_VERIFIED_CHATS = lz_verified
    
    # ‚úÖ Media DB Index ensure
    await Media.ensure_indexes()
    
    me = await LazyPrincessBot.get_me()
    temp.ME = me.id
    temp.U_NAME = me.username
    temp.B_NAME = me.first_name
    LazyPrincessBot.username = '@' + me.username
    
    # ‚úÖ Existing aiohttp web server (‡§ú‡•à‡§∏‡•á ‡§ï‡§æ ‡§§‡•à‡§∏‡§æ ‡§∞‡§π‡•á‡§ó‡§æ)
    app = web.AppRunner(await web_server())
    await app.setup()
    bind_address = "0.0.0.0" if ON_HEROKU else BIND_ADRESS
    await web.TCPSite(app, bind_address, PORT).start()
    
    logging.info(f"{me.first_name} with for Pyrogram v{__version__} (Layer {layer}) started on {me.username}.")
    logging.info(LOG_STR)
    
    # ‚úÖ Start bot idle mode
    await idle()

if __name__ == '__main__':
    try:
        loop.run_until_complete(Lazy_start())
        logging.info('-----------------------üßê Service running in Lazy Mode üò¥-----------------------')
    except KeyboardInterrupt:
        logging.info('-----------------------üòú Service Stopped Sweetheart üòù-----------------------')
